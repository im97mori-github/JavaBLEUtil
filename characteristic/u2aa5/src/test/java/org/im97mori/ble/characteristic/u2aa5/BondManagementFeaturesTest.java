package org.im97mori.ble.characteristic.u2aa5;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.Arrays;

import org.im97mori.ble.test.TestBase;
import org.junit.Test;

@SuppressWarnings({ "unused" })
public class BondManagementFeaturesTest extends TestBase {

    //@formatter:off
    private static final byte[] data_00001;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00001 = data;
    }

    private static final byte[] data_00002;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00002 = data;
    }

    private static final byte[] data_00003;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00003 = data;
    }

    private static final byte[] data_00004;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00004 = data;
    }

    private static final byte[] data_00101;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00101 = data;
    }

    private static final byte[] data_00102;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00102 = data;
    }

    private static final byte[] data_00103;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00103 = data;
    }

    private static final byte[] data_00104;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00104 = data;
    }

    private static final byte[] data_00201;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00201 = data;
    }

    private static final byte[] data_00202;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00202 = data;
    }

    private static final byte[] data_00203;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00203 = data;
    }

    private static final byte[] data_00204;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00204 = data;
    }

    private static final byte[] data_00301;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00301 = data;
    }

    private static final byte[] data_00302;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00302 = data;
    }

    private static final byte[] data_00303;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00303 = data;
    }

    private static final byte[] data_00304;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00304 = data;
    }

    private static final byte[] data_00401;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00401 = data;
    }

    private static final byte[] data_00402;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00402 = data;
    }

    private static final byte[] data_00403;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00403 = data;
    }

    private static final byte[] data_00404;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00404 = data;
    }

    private static final byte[] data_00501;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00501 = data;
    }

    private static final byte[] data_00502;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00502 = data;
    }

    private static final byte[] data_00503;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00503 = data;
    }

    private static final byte[] data_00504;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00504 = data;
    }

    private static final byte[] data_00601;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00601 = data;
    }

    private static final byte[] data_00602;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00602 = data;
    }

    private static final byte[] data_00603;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00603 = data;
    }

    private static final byte[] data_00604;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00604 = data;
    }

    private static final byte[] data_00701;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00701 = data;
    }

    private static final byte[] data_00702;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00702 = data;
    }

    private static final byte[] data_00703;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00703 = data;
    }

    private static final byte[] data_00704;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00704 = data;
    }

    private static final byte[] data_00801;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00801 = data;
    }

    private static final byte[] data_00802;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00802 = data;
    }

    private static final byte[] data_00803;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00803 = data;
    }

    private static final byte[] data_00804;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00804 = data;
    }

    private static final byte[] data_00901;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00901 = data;
    }

    private static final byte[] data_00902;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_TRUE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_00902 = data;
    }

    private static final byte[] data_01001;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_FALSE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_01001 = data;
    }

    private static final byte[] data_01002;
    static {
        byte[] data = new byte[3];
        int flags = BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_DELETE_BOND_OF_CURRENT_CONNECTION_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BONDS_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_BR_EDR_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_REMOVE_ALL_BUT_THE_ACTIVE_BOND_ON_SERVER_LE_AUTHORIZATION_CODE_REQUIRED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_IDENTIFY_YOURSELF_SUPPORTED_FALSE
                | BondManagementFeatures.BOND_MANAGEMENT_FEATURES_FEATURE_EXTENSION_TRUE;
        data[ 0] = (byte) flags;
        data[ 1] = (byte) (flags >> 8);
        data[ 2] = (byte) (flags >> 16);
        data_01002 = data;
    }
    //@formatter:on


    @Test
    public void test_constructor_00001() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeNotSupported());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeSupported());
    }

    @Test
    public void test_constructor_00002() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00003() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeSupported());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00004() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertTrue(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00101() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrNotSupported());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrSupported());
    }

    @Test
    public void test_constructor_00102() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrNotSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00103() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrNotSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrSupported());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionBrEdrAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00104() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertTrue(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00201() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeNotSupported());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeSupported());
    }

    @Test
    public void test_constructor_00202() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00203() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeSupported());
        assertFalse(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesDeleteBondOfCurrentConnectionLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00204() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertTrue(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00301() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeNotSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeSupported());
    }

    @Test
    public void test_constructor_00302() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00303() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00304() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertTrue(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00401() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrNotSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrSupported());
    }

    @Test
    public void test_constructor_00402() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00403() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerBrEdrAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00404() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertTrue(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00501() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeNotSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeSupported());
    }

    @Test
    public void test_constructor_00502() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00503() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesRemoveAllBondsOnServerLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00504() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertTrue(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00601() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeNotSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeSupported());
    }

    @Test
    public void test_constructor_00602() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00603() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00604() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertTrue(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00701() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrNotSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrSupported());
    }

    @Test
    public void test_constructor_00702() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00703() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerBrEdrAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00704() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertTrue(result1.createOperand().contains("8"));
        assertFalse(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00801() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeNotSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeSupported());
    }

    @Test
    public void test_constructor_00802() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeAuthorizationCodeNotRequired());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00803() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeNotSupported());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeSupported());
        assertFalse(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeAuthorizationCodeNotRequired());
        assertTrue(result1.isBondManagementFeaturesRemoveAllButTheActiveBondOnServerLeAuthorizationCodeRequired());
    }

    @Test
    public void test_constructor_00804() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertFalse(result1.createOperand().contains("1"));
        assertFalse(result1.createOperand().contains("2"));
        assertFalse(result1.createOperand().contains("3"));
        assertFalse(result1.createOperand().contains("4"));
        assertFalse(result1.createOperand().contains("5"));
        assertFalse(result1.createOperand().contains("6"));
        assertFalse(result1.createOperand().contains("7"));
        assertFalse(result1.createOperand().contains("8"));
        assertTrue(result1.createOperand().contains("9"));
    }

    @Test
    public void test_constructor_00901() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesIdentifyYourselfNotSupported());
        assertFalse(result1.isBondManagementFeaturesIdentifyYourselfSupported());
    }

    @Test
    public void test_constructor_00902() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesIdentifyYourselfNotSupported());
        assertTrue(result1.isBondManagementFeaturesIdentifyYourselfSupported());
    }

    @Test
    public void test_constructor_01001() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertTrue(result1.isBondManagementFeaturesFeatureExtensionFalse());
        assertFalse(result1.isBondManagementFeaturesFeatureExtensionTrue());
    }

    @Test
    public void test_constructor_01002() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(Arrays.copyOfRange(data, 0, 3), result1.getBondManagementFeatures());
        assertFalse(result1.isBondManagementFeaturesFeatureExtensionFalse());
        assertTrue(result1.isBondManagementFeaturesFeatureExtensionTrue());
    }

    @Test
    public void test_parcelable_2_00001() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00002() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00003() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00004() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00101() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00102() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00103() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00104() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00201() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00202() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00203() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00204() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00301() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00302() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00303() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00304() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00401() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00402() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00403() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00404() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00501() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00502() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00503() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00504() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00601() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00602() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00603() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00604() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00701() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00702() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00703() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00704() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00801() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00802() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00803() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00804() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00901() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_00902() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_01001() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

    @Test
    public void test_parcelable_2_01002() {
        byte[] data = getData();

        BondManagementFeatures result1 = new BondManagementFeatures(data);
        assertArrayEquals(data, result1.getBytes());
    }

}
