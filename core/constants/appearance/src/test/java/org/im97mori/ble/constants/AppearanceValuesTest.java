package org.im97mori.ble.constants;

import static org.im97mori.ble.constants.AppearanceValues.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class AppearanceValuesTest {

	@Test
	public void test_map_00001() {
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(UNKNOWN_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(UNKNOWN_APPEARANCE_CATEGORY), "Unknown");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(PHONE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(PHONE_APPEARANCE_CATEGORY), "Phone");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(COMPUTER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(COMPUTER_APPEARANCE_CATEGORY), "Computer");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(WATCH_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(WATCH_APPEARANCE_CATEGORY), "Watch");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(CLOCK_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(CLOCK_APPEARANCE_CATEGORY), "Clock");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(DISPLAY_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(DISPLAY_APPEARANCE_CATEGORY), "Display");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(REMOTE_CONTROL_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(REMOTE_CONTROL_APPEARANCE_CATEGORY), "Remote Control");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(EYE_GLASSES_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(EYE_GLASSES_APPEARANCE_CATEGORY), "EyeÂ­glasses");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(TAG_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(TAG_APPEARANCE_CATEGORY), "Tag");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(KEYRING_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(KEYRING_APPEARANCE_CATEGORY), "Keyring");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(MEDIA_PLAYER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(MEDIA_PLAYER_APPEARANCE_CATEGORY), "Media Player");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(BARCODE_SCANNER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(BARCODE_SCANNER_APPEARANCE_CATEGORY), "Barcode Scanner");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(THERMOMETER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(THERMOMETER_APPEARANCE_CATEGORY), "Thermometer");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(HEART_RATE_SENSOR_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(HEART_RATE_SENSOR_APPEARANCE_CATEGORY), "Heart Rate Sensor");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(BLOOD_PRESSURE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(BLOOD_PRESSURE_APPEARANCE_CATEGORY), "Blood Pressure");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(HUMAN_INTERFACE_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(HUMAN_INTERFACE_DEVICE_APPEARANCE_CATEGORY), "Human Interface Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(GLUCOSE_METER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(GLUCOSE_METER_APPEARANCE_CATEGORY), "Glucose Meter");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(RUNNING_WALKING_SENSOR_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(RUNNING_WALKING_SENSOR_APPEARANCE_CATEGORY), "Running Walking Sensor");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(CYCLING_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(CYCLING_APPEARANCE_CATEGORY), "Cycling");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(CONTROL_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(CONTROL_DEVICE_APPEARANCE_CATEGORY), "Control Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(NETWORK_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(NETWORK_DEVICE_APPEARANCE_CATEGORY), "Network Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(SENSOR_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(SENSOR_APPEARANCE_CATEGORY), "Sensor");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(LIGHT_FIXTURES_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(LIGHT_FIXTURES_APPEARANCE_CATEGORY), "Light Fixtures");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(FAN_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(FAN_APPEARANCE_CATEGORY), "Fan");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(HVAC_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(HVAC_APPEARANCE_CATEGORY), "HVAC");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(AIR_CONDITIONING_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(AIR_CONDITIONING_APPEARANCE_CATEGORY), "Air Conditioning");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(HUMIDIFIER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(HUMIDIFIER_APPEARANCE_CATEGORY), "Humidifier");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(HEATING_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(HEATING_APPEARANCE_CATEGORY), "Heating");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(ACCESS_CONTROL_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(ACCESS_CONTROL_APPEARANCE_CATEGORY), "Access Control");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(MOTORIZED_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(MOTORIZED_DEVICE_APPEARANCE_CATEGORY), "Motorized Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(POWER_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(POWER_DEVICE_APPEARANCE_CATEGORY), "Power Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(LIGHT_SOURCE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(LIGHT_SOURCE_APPEARANCE_CATEGORY), "Light Source");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(WINDOW_COVERING_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(WINDOW_COVERING_APPEARANCE_CATEGORY), "Window Covering");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(AUDIO_SINK_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(AUDIO_SINK_APPEARANCE_CATEGORY), "Audio Sink");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(AUDIO_SOURCE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(AUDIO_SOURCE_APPEARANCE_CATEGORY), "Audio Source");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(MOTORIZED_VEHICLE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(MOTORIZED_VEHICLE_APPEARANCE_CATEGORY), "Motorized Vehicle");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(DOMESTIC_APPLIANCE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(DOMESTIC_APPLIANCE_APPEARANCE_CATEGORY), "Domestic Appliance");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(WEARABLE_AUDIO_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(WEARABLE_AUDIO_DEVICE_APPEARANCE_CATEGORY), "Wearable Audio Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(AIRCRAFT_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(AIRCRAFT_APPEARANCE_CATEGORY), "Aircraft");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(AV_EQUIPMENT_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(AV_EQUIPMENT_APPEARANCE_CATEGORY), "AV Equipment");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(DISPLAY_EQUIPMENT_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(DISPLAY_EQUIPMENT_APPEARANCE_CATEGORY), "Display Equipment");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(HEARING_AID_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(HEARING_AID_APPEARANCE_CATEGORY), "Hearing aid");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(GAMING_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(GAMING_APPEARANCE_CATEGORY), "Gaming");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(SIGNAGE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(SIGNAGE_APPEARANCE_CATEGORY), "Signage");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(PULSE_OXIMETER_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(PULSE_OXIMETER_APPEARANCE_CATEGORY), "Pulse Oximeter");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(WEIGHT_SCALE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(WEIGHT_SCALE_APPEARANCE_CATEGORY), "Weight Scale");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(PERSONAL_MOBILITY_DEVICE_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(PERSONAL_MOBILITY_DEVICE_APPEARANCE_CATEGORY), "Personal Mobility Device");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(CONTINUOUS_GLUCOSE_MONITOR_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(CONTINUOUS_GLUCOSE_MONITOR_APPEARANCE_CATEGORY), "Continuous Glucose Monitor");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(INSULIN_PUMP_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(INSULIN_PUMP_APPEARANCE_CATEGORY), "Insulin Pump");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(MEDICATION_DELIVERY_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(MEDICATION_DELIVERY_APPEARANCE_CATEGORY), "Medication Delivery");
		assertTrue(APPEARANCE_CATEGORY_MAPPING.containsKey(OUTDOOR_SPORTS_ACTIVITY_APPEARANCE_CATEGORY));
		assertEquals(APPEARANCE_CATEGORY_MAPPING.get(OUTDOOR_SPORTS_ACTIVITY_APPEARANCE_CATEGORY), "Outdoor Sports Activity");
	}

	@Test
	public void test_map_00002() {
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_UNKNOWN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_UNKNOWN_APPEARANCE_SUB_CATEGORY), "Generic Unknown");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_PHONE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_PHONE_APPEARANCE_SUB_CATEGORY), "Generic Phone");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_COMPUTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_COMPUTER_APPEARANCE_SUB_CATEGORY), "Generic Computer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DESKTOP_WORKSTATION_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DESKTOP_WORKSTATION_APPEARANCE_SUB_CATEGORY), "Desktop Workstation");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SERVER_CLASS_COMPUTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SERVER_CLASS_COMPUTER_APPEARANCE_SUB_CATEGORY), "ServerÂ­class Computer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LAPTOP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LAPTOP_APPEARANCE_SUB_CATEGORY), "Laptop");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HANDHELD_PC_PDA_CLAMSHELL_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HANDHELD_PC_PDA_CLAMSHELL_APPEARANCE_SUB_CATEGORY), "Handheld PC/PDA (clamshell)");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PALM_SIZE_PC_PDA_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PALM_SIZE_PC_PDA_APPEARANCE_SUB_CATEGORY), "PalmÂ­size PC/PDA");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WEARABLE_COMPUTER_WATCH_SIZE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WEARABLE_COMPUTER_WATCH_SIZE_APPEARANCE_SUB_CATEGORY), "Wearable computer (watch size)");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TABLET_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TABLET_APPEARANCE_SUB_CATEGORY), "Tablet");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DOCKING_STATION_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DOCKING_STATION_APPEARANCE_SUB_CATEGORY), "Docking Station");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ALL_IN_ONE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ALL_IN_ONE_APPEARANCE_SUB_CATEGORY), "All in One");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BLADE_SERVER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BLADE_SERVER_APPEARANCE_SUB_CATEGORY), "Blade Server");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CONVERTIBLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CONVERTIBLE_APPEARANCE_SUB_CATEGORY), "Convertible");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DETACHABLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DETACHABLE_APPEARANCE_SUB_CATEGORY), "Detachable");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(IOT_GATEWAY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(IOT_GATEWAY_APPEARANCE_SUB_CATEGORY), "IoT Gateway");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MINI_PC_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MINI_PC_APPEARANCE_SUB_CATEGORY), "Mini PC");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(STICK_PC_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(STICK_PC_APPEARANCE_SUB_CATEGORY), "Stick PC");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_WATCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_WATCH_APPEARANCE_SUB_CATEGORY), "Generic Watch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SPORTS_WATCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SPORTS_WATCH_APPEARANCE_SUB_CATEGORY), "Sports Watch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SMARTWATCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SMARTWATCH_APPEARANCE_SUB_CATEGORY), "Smartwatch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_CLOCK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_CLOCK_APPEARANCE_SUB_CATEGORY), "Generic Clock");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_DISPLAY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_DISPLAY_APPEARANCE_SUB_CATEGORY), "Generic Display");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_REMOTE_CONTROL_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_REMOTE_CONTROL_APPEARANCE_SUB_CATEGORY), "Generic Remote Control");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_EYE_GLASSES_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_EYE_GLASSES_APPEARANCE_SUB_CATEGORY), "Generic EyeÂ­glasses");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_TAG_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_TAG_APPEARANCE_SUB_CATEGORY), "Generic Tag");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_KEYRING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_KEYRING_APPEARANCE_SUB_CATEGORY), "Generic Keyring");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_MEDIA_PLAYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_MEDIA_PLAYER_APPEARANCE_SUB_CATEGORY), "Generic Media Player");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_BARCODE_SCANNER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_BARCODE_SCANNER_APPEARANCE_SUB_CATEGORY), "Generic Barcode Scanner");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_THERMOMETER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_THERMOMETER_APPEARANCE_SUB_CATEGORY), "Generic Thermometer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EAR_THERMOMETER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EAR_THERMOMETER_APPEARANCE_SUB_CATEGORY), "Ear Thermometer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_HEART_RATE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_HEART_RATE_SENSOR_APPEARANCE_SUB_CATEGORY), "Generic Heart Rate Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HEART_RATE_BELT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HEART_RATE_BELT_APPEARANCE_SUB_CATEGORY), "Heart Rate Belt");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_BLOOD_PRESSURE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_BLOOD_PRESSURE_APPEARANCE_SUB_CATEGORY), "Generic Blood Pressure");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ARM_BLOOD_PRESSURE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ARM_BLOOD_PRESSURE_APPEARANCE_SUB_CATEGORY), "Arm Blood Pressure");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WRIST_BLOOD_PRESSURE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WRIST_BLOOD_PRESSURE_APPEARANCE_SUB_CATEGORY), "Wrist Blood Pressure");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_HUMAN_INTERFACE_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_HUMAN_INTERFACE_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Human Interface Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(KEYBOARD_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(KEYBOARD_APPEARANCE_SUB_CATEGORY), "Keyboard");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MOUSE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MOUSE_APPEARANCE_SUB_CATEGORY), "Mouse");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(JOYSTICK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(JOYSTICK_APPEARANCE_SUB_CATEGORY), "Joystick");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GAMEPAD_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GAMEPAD_APPEARANCE_SUB_CATEGORY), "Gamepad");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DIGITIZER_TABLET_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DIGITIZER_TABLET_APPEARANCE_SUB_CATEGORY), "Digitizer Tablet");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CARD_READER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CARD_READER_APPEARANCE_SUB_CATEGORY), "Card Reader");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DIGITAL_PEN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DIGITAL_PEN_APPEARANCE_SUB_CATEGORY), "Digital Pen");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BARCODE_SCANNER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BARCODE_SCANNER_APPEARANCE_SUB_CATEGORY), "Barcode Scanner");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_GLUCOSE_METER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_GLUCOSE_METER_APPEARANCE_SUB_CATEGORY), "Generic Glucose Meter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY), "Generic Running Walking Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(IN_SHOE_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(IN_SHOE_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY), "InÂ­Shoe Running Walking Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ON_SHOE_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ON_SHOE_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY), "OnÂ­Shoe Running Walking Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ON_HIP_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ON_HIP_RUNNING_WALKING_SENSOR_APPEARANCE_SUB_CATEGORY), "OnÂ­Hip Running Walking Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_CYCLING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_CYCLING_APPEARANCE_SUB_CATEGORY), "Generic Cycling");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CYCLING_COMPUTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CYCLING_COMPUTER_APPEARANCE_SUB_CATEGORY), "Cycling Computer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SPEED_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SPEED_SENSOR_APPEARANCE_SUB_CATEGORY), "Speed Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CADENCE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CADENCE_SENSOR_APPEARANCE_SUB_CATEGORY), "Cadence Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POWER_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POWER_SENSOR_APPEARANCE_SUB_CATEGORY), "Power Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SPEED_AND_CADENCE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SPEED_AND_CADENCE_SENSOR_APPEARANCE_SUB_CATEGORY), "Speed and Cadence Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_CONTROL_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_CONTROL_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Control Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SWITCH_APPEARANCE_SUB_CATEGORY), "Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MULTI_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MULTI_SWITCH_APPEARANCE_SUB_CATEGORY), "MultiÂ­switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BUTTON_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BUTTON_APPEARANCE_SUB_CATEGORY), "Button");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SLIDER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SLIDER_APPEARANCE_SUB_CATEGORY), "Slider");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ROTARY_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ROTARY_SWITCH_APPEARANCE_SUB_CATEGORY), "Rotary Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TOUCH_PANEL_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TOUCH_PANEL_APPEARANCE_SUB_CATEGORY), "Touch Panel");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SINGLE_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SINGLE_SWITCH_APPEARANCE_SUB_CATEGORY), "Single Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DOUBLE_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DOUBLE_SWITCH_APPEARANCE_SUB_CATEGORY), "Double Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TRIPLE_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TRIPLE_SWITCH_APPEARANCE_SUB_CATEGORY), "Triple Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BATTERY_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BATTERY_SWITCH_APPEARANCE_SUB_CATEGORY), "Battery Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ENERGY_HARVESTING_SWITCH_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ENERGY_HARVESTING_SWITCH_APPEARANCE_SUB_CATEGORY), "Energy Harvesting Switch");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PUSH_BUTTON_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PUSH_BUTTON_APPEARANCE_SUB_CATEGORY), "Push Button");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_NETWORK_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_NETWORK_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Network Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ACCESS_POINT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ACCESS_POINT_APPEARANCE_SUB_CATEGORY), "Access Point");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MESH_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MESH_DEVICE_APPEARANCE_SUB_CATEGORY), "Mesh Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MESH_NETWORK_PROXY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MESH_NETWORK_PROXY_APPEARANCE_SUB_CATEGORY), "Mesh Network Proxy");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_SENSOR_APPEARANCE_SUB_CATEGORY), "Generic Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MOTION_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MOTION_SENSOR_APPEARANCE_SUB_CATEGORY), "Motion Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AIR_QUALITY_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AIR_QUALITY_SENSOR_APPEARANCE_SUB_CATEGORY), "Air quality Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TEMPERATURE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TEMPERATURE_SENSOR_APPEARANCE_SUB_CATEGORY), "Temperature Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HUMIDITY_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HUMIDITY_SENSOR_APPEARANCE_SUB_CATEGORY), "Humidity Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LEAK_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LEAK_SENSOR_APPEARANCE_SUB_CATEGORY), "Leak Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SMOKE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SMOKE_SENSOR_APPEARANCE_SUB_CATEGORY), "Smoke Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(OCCUPANCY_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(OCCUPANCY_SENSOR_APPEARANCE_SUB_CATEGORY), "Occupancy Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CONTACT_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CONTACT_SENSOR_APPEARANCE_SUB_CATEGORY), "Contact Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CARBON_MONOXIDE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CARBON_MONOXIDE_SENSOR_APPEARANCE_SUB_CATEGORY), "Carbon Monoxide Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CARBON_DIOXIDE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CARBON_DIOXIDE_SENSOR_APPEARANCE_SUB_CATEGORY), "Carbon Dioxide Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AMBIENT_LIGHT_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AMBIENT_LIGHT_SENSOR_APPEARANCE_SUB_CATEGORY), "Ambient Light Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ENERGY_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ENERGY_SENSOR_APPEARANCE_SUB_CATEGORY), "Energy Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(COLOR_LIGHT_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(COLOR_LIGHT_SENSOR_APPEARANCE_SUB_CATEGORY), "Color Light Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RAIN_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RAIN_SENSOR_APPEARANCE_SUB_CATEGORY), "Rain Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FIRE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FIRE_SENSOR_APPEARANCE_SUB_CATEGORY), "Fire Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WIND_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WIND_SENSOR_APPEARANCE_SUB_CATEGORY), "Wind Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PROXIMITY_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PROXIMITY_SENSOR_APPEARANCE_SUB_CATEGORY), "Proximity Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MULTI_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MULTI_SENSOR_APPEARANCE_SUB_CATEGORY), "MultiÂ­Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FLUSH_MOUNTEDSENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FLUSH_MOUNTEDSENSOR_APPEARANCE_SUB_CATEGORY), "Flush mounted sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CEILING_MOUNTEDSENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CEILING_MOUNTEDSENSOR_APPEARANCE_SUB_CATEGORY), "Ceiling mounted sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WALL_MOUNTEDSENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WALL_MOUNTEDSENSOR_APPEARANCE_SUB_CATEGORY), "Wall mounted sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MULTISENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MULTISENSOR_APPEARANCE_SUB_CATEGORY), "Multisensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ENERGY_METER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ENERGY_METER_APPEARANCE_SUB_CATEGORY), "Energy Meter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FLAME_DETECTOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FLAME_DETECTOR_APPEARANCE_SUB_CATEGORY), "Flame Detector");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(VEHICLE_TIRE_PRESSURE_SENSOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(VEHICLE_TIRE_PRESSURE_SENSOR_APPEARANCE_SUB_CATEGORY), "Vehicle Tire Pressure Sensor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_LIGHT_FIXTURES_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_LIGHT_FIXTURES_APPEARANCE_SUB_CATEGORY), "Generic Light Fixtures");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WALL_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WALL_LIGHT_APPEARANCE_SUB_CATEGORY), "Wall Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CEILING_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CEILING_LIGHT_APPEARANCE_SUB_CATEGORY), "Ceiling Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FLOOR_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FLOOR_LIGHT_APPEARANCE_SUB_CATEGORY), "Floor Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CABINET_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CABINET_LIGHT_APPEARANCE_SUB_CATEGORY), "Cabinet Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DESK_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DESK_LIGHT_APPEARANCE_SUB_CATEGORY), "Desk Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TROFFER_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TROFFER_LIGHT_APPEARANCE_SUB_CATEGORY), "Troffer Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PENDANT_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PENDANT_LIGHT_APPEARANCE_SUB_CATEGORY), "Pendant Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(IN_GROUND_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(IN_GROUND_LIGHT_APPEARANCE_SUB_CATEGORY), "InÂ­ground Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FLOOD_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FLOOD_LIGHT_APPEARANCE_SUB_CATEGORY), "Flood Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(UNDERWATER_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(UNDERWATER_LIGHT_APPEARANCE_SUB_CATEGORY), "Underwater Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BOLLARD_WITH_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BOLLARD_WITH_LIGHT_APPEARANCE_SUB_CATEGORY), "Bollard with Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PATHWAY_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PATHWAY_LIGHT_APPEARANCE_SUB_CATEGORY), "Pathway Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GARDEN_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GARDEN_LIGHT_APPEARANCE_SUB_CATEGORY), "Garden Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POLE_TOP_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POLE_TOP_LIGHT_APPEARANCE_SUB_CATEGORY), "PoleÂ­top Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SPOTLIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SPOTLIGHT_APPEARANCE_SUB_CATEGORY), "Spotlight");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LINEAR_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LINEAR_LIGHT_APPEARANCE_SUB_CATEGORY), "Linear Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(STREET_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(STREET_LIGHT_APPEARANCE_SUB_CATEGORY), "Street Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SHELVES_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SHELVES_LIGHT_APPEARANCE_SUB_CATEGORY), "Shelves Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BAY_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BAY_LIGHT_APPEARANCE_SUB_CATEGORY), "Bay Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EMERGENCY_EXIT_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EMERGENCY_EXIT_LIGHT_APPEARANCE_SUB_CATEGORY), "Emergency Exit Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LIGHT_CONTROLLER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LIGHT_CONTROLLER_APPEARANCE_SUB_CATEGORY), "Light controller");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LIGHT_DRIVER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LIGHT_DRIVER_APPEARANCE_SUB_CATEGORY), "Light driver");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BULB_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BULB_APPEARANCE_SUB_CATEGORY), "Bulb");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LOW_BAY_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LOW_BAY_LIGHT_APPEARANCE_SUB_CATEGORY), "LowÂ­bay Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HIGH_BAY_LIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HIGH_BAY_LIGHT_APPEARANCE_SUB_CATEGORY), "HighÂ­bay Light");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_FAN_APPEARANCE_SUB_CATEGORY), "Generic Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CEILING_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CEILING_FAN_APPEARANCE_SUB_CATEGORY), "Ceiling Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AXIAL_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AXIAL_FAN_APPEARANCE_SUB_CATEGORY), "Axial Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EXHAUST_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EXHAUST_FAN_APPEARANCE_SUB_CATEGORY), "Exhaust Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PEDESTAL_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PEDESTAL_FAN_APPEARANCE_SUB_CATEGORY), "Pedestal Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DESK_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DESK_FAN_APPEARANCE_SUB_CATEGORY), "Desk Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WALL_FAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WALL_FAN_APPEARANCE_SUB_CATEGORY), "Wall Fan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_HVAC_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_HVAC_APPEARANCE_SUB_CATEGORY), "Generic HVAC");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(THERMOSTAT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(THERMOSTAT_APPEARANCE_SUB_CATEGORY), "Thermostat");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HUMIDIFIER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HUMIDIFIER_APPEARANCE_SUB_CATEGORY), "Humidifier");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DE_HUMIDIFIER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DE_HUMIDIFIER_APPEARANCE_SUB_CATEGORY), "DeÂ­humidifier");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HEATER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HEATER_APPEARANCE_SUB_CATEGORY), "Heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RADIATOR0605_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RADIATOR0605_APPEARANCE_SUB_CATEGORY), "Radiator");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BOILER0606_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BOILER0606_APPEARANCE_SUB_CATEGORY), "Boiler");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HEAT_PUMP0607_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HEAT_PUMP0607_APPEARANCE_SUB_CATEGORY), "Heat pump");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(INFRARED_HEATER0608_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(INFRARED_HEATER0608_APPEARANCE_SUB_CATEGORY), "Infrared heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RADIANT_PANEL_HEATER0609_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RADIANT_PANEL_HEATER0609_APPEARANCE_SUB_CATEGORY), "Radiant panel heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FAN_HEATER060_A_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FAN_HEATER060_A_APPEARANCE_SUB_CATEGORY), "Fan heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AIR_CURTAIN060_B_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AIR_CURTAIN060_B_APPEARANCE_SUB_CATEGORY), "Air curtain");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_AIR_CONDITIONING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_AIR_CONDITIONING_APPEARANCE_SUB_CATEGORY), "Generic Air Conditioning");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_HUMIDIFIER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_HUMIDIFIER_APPEARANCE_SUB_CATEGORY), "Generic Humidifier");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_HEATING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_HEATING_APPEARANCE_SUB_CATEGORY), "Generic Heating");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RADIATOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RADIATOR_APPEARANCE_SUB_CATEGORY), "Radiator");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BOILER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BOILER_APPEARANCE_SUB_CATEGORY), "Boiler");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HEAT_PUMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HEAT_PUMP_APPEARANCE_SUB_CATEGORY), "Heat Pump");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(INFRARED_HEATER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(INFRARED_HEATER_APPEARANCE_SUB_CATEGORY), "Infrared Heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RADIANT_PANEL_HEATER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RADIANT_PANEL_HEATER_APPEARANCE_SUB_CATEGORY), "Radiant Panel Heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FAN_HEATER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FAN_HEATER_APPEARANCE_SUB_CATEGORY), "Fan Heater");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AIR_CURTAIN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AIR_CURTAIN_APPEARANCE_SUB_CATEGORY), "Air Curtain");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_ACCESS_CONTROL_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_ACCESS_CONTROL_APPEARANCE_SUB_CATEGORY), "Generic Access Control");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ACCESS_DOOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ACCESS_DOOR_APPEARANCE_SUB_CATEGORY), "Access Door");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GARAGE_DOOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GARAGE_DOOR_APPEARANCE_SUB_CATEGORY), "Garage Door");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EMERGENCY_EXIT_DOOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EMERGENCY_EXIT_DOOR_APPEARANCE_SUB_CATEGORY), "Emergency Exit Door");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ACCESS_LOCK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ACCESS_LOCK_APPEARANCE_SUB_CATEGORY), "Access Lock");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ELEVATOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ELEVATOR_APPEARANCE_SUB_CATEGORY), "Elevator");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WINDOW_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WINDOW_APPEARANCE_SUB_CATEGORY), "Window");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ENTRANCE_GATE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ENTRANCE_GATE_APPEARANCE_SUB_CATEGORY), "Entrance Gate");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DOOR_LOCK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DOOR_LOCK_APPEARANCE_SUB_CATEGORY), "Door Lock");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LOCKER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LOCKER_APPEARANCE_SUB_CATEGORY), "Locker");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_MOTORIZED_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_MOTORIZED_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Motorized Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MOTORIZED_GATE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MOTORIZED_GATE_APPEARANCE_SUB_CATEGORY), "Motorized Gate");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AWNING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AWNING_APPEARANCE_SUB_CATEGORY), "Awning");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BLINDS_OR_SHADES_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BLINDS_OR_SHADES_APPEARANCE_SUB_CATEGORY), "Blinds or Shades");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CURTAINS_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CURTAINS_APPEARANCE_SUB_CATEGORY), "Curtains");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SCREEN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SCREEN_APPEARANCE_SUB_CATEGORY), "Screen");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_POWER_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_POWER_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Power Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POWER_OUTLET_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POWER_OUTLET_APPEARANCE_SUB_CATEGORY), "Power Outlet");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POWER_STRIP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POWER_STRIP_APPEARANCE_SUB_CATEGORY), "Power Strip");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PLUG_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PLUG_APPEARANCE_SUB_CATEGORY), "Plug");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POWER_SUPPLY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POWER_SUPPLY_APPEARANCE_SUB_CATEGORY), "Power Supply");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(L_E_D_DRIVER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(L_E_D_DRIVER_APPEARANCE_SUB_CATEGORY), "LED Driver");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FLUORESCENT_LAMP_GEAR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FLUORESCENT_LAMP_GEAR_APPEARANCE_SUB_CATEGORY), "Fluorescent Lamp Gear");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(H_I_D_LAMP_GEAR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(H_I_D_LAMP_GEAR_APPEARANCE_SUB_CATEGORY), "HID Lamp Gear");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CHARGE_CASE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CHARGE_CASE_APPEARANCE_SUB_CATEGORY), "Charge Case");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POWER_BANK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POWER_BANK_APPEARANCE_SUB_CATEGORY), "Power Bank");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_LIGHT_SOURCE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_LIGHT_SOURCE_APPEARANCE_SUB_CATEGORY), "Generic Light Source");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(INCANDESCENT_LIGHT_BULB_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(INCANDESCENT_LIGHT_BULB_APPEARANCE_SUB_CATEGORY), "Incandescent Light Bulb");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LED_LAMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LED_LAMP_APPEARANCE_SUB_CATEGORY), "LED Lamp");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HID_LAMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HID_LAMP_APPEARANCE_SUB_CATEGORY), "HID Lamp");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FLUORESCENT_LAMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FLUORESCENT_LAMP_APPEARANCE_SUB_CATEGORY), "Fluorescent Lamp");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LED_ARRAY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LED_ARRAY_APPEARANCE_SUB_CATEGORY), "LED Array");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MULTI_COLOR_LED_ARRAY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MULTI_COLOR_LED_ARRAY_APPEARANCE_SUB_CATEGORY), "MultiÂ­Color LED Array");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_WINDOW_COVERING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_WINDOW_COVERING_APPEARANCE_SUB_CATEGORY), "Generic Window Covering");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WINDOW_SHADES_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WINDOW_SHADES_APPEARANCE_SUB_CATEGORY), "Window Shades");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WINDOW_BLINDS_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WINDOW_BLINDS_APPEARANCE_SUB_CATEGORY), "Window Blinds");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WINDOW_AWNING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WINDOW_AWNING_APPEARANCE_SUB_CATEGORY), "Window Awning");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WINDOW_CURTAIN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WINDOW_CURTAIN_APPEARANCE_SUB_CATEGORY), "Window Curtain");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EXTERIOR_SHUTTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EXTERIOR_SHUTTER_APPEARANCE_SUB_CATEGORY), "Exterior Shutter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EXTERIOR_SCREEN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EXTERIOR_SCREEN_APPEARANCE_SUB_CATEGORY), "Exterior Screen");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_AUDIO_SINK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_AUDIO_SINK_APPEARANCE_SUB_CATEGORY), "Generic Audio Sink");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(STANDALONE_SPEAKER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(STANDALONE_SPEAKER_APPEARANCE_SUB_CATEGORY), "Standalone Speaker");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SOUNDBAR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SOUNDBAR_APPEARANCE_SUB_CATEGORY), "Soundbar");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BOOKSHELF_SPEAKER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BOOKSHELF_SPEAKER_APPEARANCE_SUB_CATEGORY), "Bookshelf Speaker");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(STANDMOUNTED_SPEAKER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(STANDMOUNTED_SPEAKER_APPEARANCE_SUB_CATEGORY), "Standmounted Speaker");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SPEAKERPHONE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SPEAKERPHONE_APPEARANCE_SUB_CATEGORY), "Speakerphone");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_AUDIO_SOURCE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_AUDIO_SOURCE_APPEARANCE_SUB_CATEGORY), "Generic Audio Source");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MICROPHONE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MICROPHONE_APPEARANCE_SUB_CATEGORY), "Microphone");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ALARM_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ALARM_APPEARANCE_SUB_CATEGORY), "Alarm");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BELL_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BELL_APPEARANCE_SUB_CATEGORY), "Bell");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HORN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HORN_APPEARANCE_SUB_CATEGORY), "Horn");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BROADCASTING_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BROADCASTING_DEVICE_APPEARANCE_SUB_CATEGORY), "Broadcasting Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SERVICE_DESK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SERVICE_DESK_APPEARANCE_SUB_CATEGORY), "Service Desk");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(KIOSK_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(KIOSK_APPEARANCE_SUB_CATEGORY), "Kiosk");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BROADCASTING_ROOM_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BROADCASTING_ROOM_APPEARANCE_SUB_CATEGORY), "Broadcasting Room");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AUDITORIUM_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AUDITORIUM_APPEARANCE_SUB_CATEGORY), "Auditorium");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_MOTORIZED_VEHICLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_MOTORIZED_VEHICLE_APPEARANCE_SUB_CATEGORY), "Generic Motorized Vehicle");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CAR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CAR_APPEARANCE_SUB_CATEGORY), "Car");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LARGE_GOODS_VEHICLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LARGE_GOODS_VEHICLE_APPEARANCE_SUB_CATEGORY), "Large Goods Vehicle");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TWO_WHEELED_VEHICLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TWO_WHEELED_VEHICLE_APPEARANCE_SUB_CATEGORY), "2Â­Wheeled Vehicle");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MOTORBIKE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MOTORBIKE_APPEARANCE_SUB_CATEGORY), "Motorbike");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SCOOTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SCOOTER_APPEARANCE_SUB_CATEGORY), "Scooter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MOPED_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MOPED_APPEARANCE_SUB_CATEGORY), "Moped");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(THREE_WHEELED_VEHICLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(THREE_WHEELED_VEHICLE_APPEARANCE_SUB_CATEGORY), "3Â­Wheeled Vehicle");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LIGHT_VEHICLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LIGHT_VEHICLE_APPEARANCE_SUB_CATEGORY), "Light Vehicle");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(QUAD_BIKE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(QUAD_BIKE_APPEARANCE_SUB_CATEGORY), "Quad Bike");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MINIBUS_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MINIBUS_APPEARANCE_SUB_CATEGORY), "Minibus");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BUS_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BUS_APPEARANCE_SUB_CATEGORY), "Bus");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TROLLEY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TROLLEY_APPEARANCE_SUB_CATEGORY), "Trolley");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AGRICULTURAL_VEHICLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AGRICULTURAL_VEHICLE_APPEARANCE_SUB_CATEGORY), "Agricultural Vehicle");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CAMPER_CARAVAN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CAMPER_CARAVAN_APPEARANCE_SUB_CATEGORY), "Camper / Caravan");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RECREATIONAL_VEHICLE_MOTOR_HOME_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RECREATIONAL_VEHICLE_MOTOR_HOME_APPEARANCE_SUB_CATEGORY), "Recreational Vehicle / Motor Home");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_DOMESTIC_APPLIANCE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_DOMESTIC_APPLIANCE_APPEARANCE_SUB_CATEGORY), "Generic Domestic Appliance");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(REFRIGERATOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(REFRIGERATOR_APPEARANCE_SUB_CATEGORY), "Refrigerator");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FREEZER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FREEZER_APPEARANCE_SUB_CATEGORY), "Freezer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(OVEN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(OVEN_APPEARANCE_SUB_CATEGORY), "Oven");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MICROWAVE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MICROWAVE_APPEARANCE_SUB_CATEGORY), "Microwave");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TOASTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TOASTER_APPEARANCE_SUB_CATEGORY), "Toaster");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WASHING_MACHINE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WASHING_MACHINE_APPEARANCE_SUB_CATEGORY), "Washing Machine");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DRYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DRYER_APPEARANCE_SUB_CATEGORY), "Dryer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(COFFEE_MAKER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(COFFEE_MAKER_APPEARANCE_SUB_CATEGORY), "Coffee maker");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CLOTHES_IRON_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CLOTHES_IRON_APPEARANCE_SUB_CATEGORY), "Clothes iron");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CURLING_IRON_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CURLING_IRON_APPEARANCE_SUB_CATEGORY), "Curling iron");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HAIR_DRYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HAIR_DRYER_APPEARANCE_SUB_CATEGORY), "Hair dryer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(VACUUM_CLEANER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(VACUUM_CLEANER_APPEARANCE_SUB_CATEGORY), "Vacuum cleaner");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ROBOTIC_VACUUM_CLEANER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ROBOTIC_VACUUM_CLEANER_APPEARANCE_SUB_CATEGORY), "Robotic vacuum cleaner");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RICE_COOKER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RICE_COOKER_APPEARANCE_SUB_CATEGORY), "Rice cooker");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CLOTHES_STEAMER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CLOTHES_STEAMER_APPEARANCE_SUB_CATEGORY), "Clothes steamer");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_WEARABLE_AUDIO_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_WEARABLE_AUDIO_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Wearable Audio Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(EARBUD_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(EARBUD_APPEARANCE_SUB_CATEGORY), "Earbud");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HEADSET_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HEADSET_APPEARANCE_SUB_CATEGORY), "Headset");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HEADPHONES_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HEADPHONES_APPEARANCE_SUB_CATEGORY), "Headphones");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(NECK_BAND_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(NECK_BAND_APPEARANCE_SUB_CATEGORY), "Neck Band");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_AIRCRAFT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_AIRCRAFT_APPEARANCE_SUB_CATEGORY), "Generic Aircraft");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LIGHT_AIRCRAFT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LIGHT_AIRCRAFT_APPEARANCE_SUB_CATEGORY), "Light Aircraft");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MICROLIGHT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MICROLIGHT_APPEARANCE_SUB_CATEGORY), "Microlight");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PARAGLIDER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PARAGLIDER_APPEARANCE_SUB_CATEGORY), "Paraglider");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LARGE_PASSENGER_AIRCRAFT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LARGE_PASSENGER_AIRCRAFT_APPEARANCE_SUB_CATEGORY), "Large Passenger Aircraft");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_AV_EQUIPMENT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_AV_EQUIPMENT_APPEARANCE_SUB_CATEGORY), "Generic AV Equipment");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(AMPLIFIER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(AMPLIFIER_APPEARANCE_SUB_CATEGORY), "Amplifier");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RECEIVER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RECEIVER_APPEARANCE_SUB_CATEGORY), "Receiver");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(RADIO_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(RADIO_APPEARANCE_SUB_CATEGORY), "Radio");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TUNER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TUNER_APPEARANCE_SUB_CATEGORY), "Tuner");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TURNTABLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TURNTABLE_APPEARANCE_SUB_CATEGORY), "Turntable");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(CD_PLAYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(CD_PLAYER_APPEARANCE_SUB_CATEGORY), "CD Player");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DVD_PLAYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DVD_PLAYER_APPEARANCE_SUB_CATEGORY), "DVD Player");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BLURAY_PLAYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BLURAY_PLAYER_APPEARANCE_SUB_CATEGORY), "Bluray Player");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(OPTICAL_DISC_PLAYER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(OPTICAL_DISC_PLAYER_APPEARANCE_SUB_CATEGORY), "Optical Disc Player");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(SET_TOP_BOX_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(SET_TOP_BOX_APPEARANCE_SUB_CATEGORY), "SetÂ­Top Box");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_DISPLAY_EQUIPMENT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_DISPLAY_EQUIPMENT_APPEARANCE_SUB_CATEGORY), "Generic Display Equipment");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(TELEVISION_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(TELEVISION_APPEARANCE_SUB_CATEGORY), "Television");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MONITOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MONITOR_APPEARANCE_SUB_CATEGORY), "Monitor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PROJECTOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PROJECTOR_APPEARANCE_SUB_CATEGORY), "Projector");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_HEARING_AID_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_HEARING_AID_APPEARANCE_SUB_CATEGORY), "Generic Hearing aid");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(IN_EAR_HEARING_AID_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(IN_EAR_HEARING_AID_APPEARANCE_SUB_CATEGORY), "InÂ­ear hearing aid");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(BEHIND_EAR_HEARING_AID_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(BEHIND_EAR_HEARING_AID_APPEARANCE_SUB_CATEGORY), "BehindÂ­ear hearing aid");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(COCHLEAR_IMPLANT_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(COCHLEAR_IMPLANT_APPEARANCE_SUB_CATEGORY), "Cochlear Implant");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_GAMING_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_GAMING_APPEARANCE_SUB_CATEGORY), "Generic Gaming");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(HOME_VIDEO_GAME_CONSOLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(HOME_VIDEO_GAME_CONSOLE_APPEARANCE_SUB_CATEGORY), "Home Video Game Console");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(PORTABLE_HANDHELD_CONSOLE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(PORTABLE_HANDHELD_CONSOLE_APPEARANCE_SUB_CATEGORY), "Portable handheld console");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_SIGNAGE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_SIGNAGE_APPEARANCE_SUB_CATEGORY), "Generic Signage");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(DIGITAL_SIGNAGE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(DIGITAL_SIGNAGE_APPEARANCE_SUB_CATEGORY), "Digital Signage");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(ELECTRONIC_LABEL_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(ELECTRONIC_LABEL_APPEARANCE_SUB_CATEGORY), "Electronic Label");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_PULSE_OXIMETER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_PULSE_OXIMETER_APPEARANCE_SUB_CATEGORY), "Generic Pulse Oximeter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(FINGERTIP_PULSE_OXIMETER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(FINGERTIP_PULSE_OXIMETER_APPEARANCE_SUB_CATEGORY), "Fingertip Pulse Oximeter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(WRIST_WORN_PULSE_OXIMETER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(WRIST_WORN_PULSE_OXIMETER_APPEARANCE_SUB_CATEGORY), "Wrist Worn Pulse Oximeter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_WEIGHT_SCALE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_WEIGHT_SCALE_APPEARANCE_SUB_CATEGORY), "Generic Weight Scale");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_PERSONAL_MOBILITY_DEVICE_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_PERSONAL_MOBILITY_DEVICE_APPEARANCE_SUB_CATEGORY), "Generic Personal Mobility Device");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(POWERED_WHEELCHAIR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(POWERED_WHEELCHAIR_APPEARANCE_SUB_CATEGORY), "Powered Wheelchair");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(MOBILITY_SCOOTER_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(MOBILITY_SCOOTER_APPEARANCE_SUB_CATEGORY), "Mobility Scooter");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_CONTINUOUS_GLUCOSE_MONITOR_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_CONTINUOUS_GLUCOSE_MONITOR_APPEARANCE_SUB_CATEGORY), "Generic Continuous Glucose Monitor");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_INSULIN_PUMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_INSULIN_PUMP_APPEARANCE_SUB_CATEGORY), "Generic Insulin Pump");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(INSULIN_PUMPDURABLEPUMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(INSULIN_PUMPDURABLEPUMP_APPEARANCE_SUB_CATEGORY), "Insulin Pump, durable pump");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(INSULIN_PUMPPATCHPUMP_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(INSULIN_PUMPPATCHPUMP_APPEARANCE_SUB_CATEGORY), "Insulin Pump, patch pump");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(INSULIN_PEN_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(INSULIN_PEN_APPEARANCE_SUB_CATEGORY), "Insulin Pen");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_MEDICATION_DELIVERY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_MEDICATION_DELIVERY_APPEARANCE_SUB_CATEGORY), "Generic Medication Delivery");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(GENERIC_OUTDOOR_SPORTS_ACTIVITY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(GENERIC_OUTDOOR_SPORTS_ACTIVITY_APPEARANCE_SUB_CATEGORY), "Generic Outdoor Sports Activity");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LOCATION_DISPLAY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LOCATION_DISPLAY_APPEARANCE_SUB_CATEGORY), "Location Display");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LOCATION_AND_NAVIGATION_DISPLAY_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LOCATION_AND_NAVIGATION_DISPLAY_APPEARANCE_SUB_CATEGORY), "Location and Navigation Display");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LOCATION_POD_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LOCATION_POD_APPEARANCE_SUB_CATEGORY), "Location Pod");
		assertTrue(APPEARANCE_SUB_CATEGORY_MAPPING.containsKey(LOCATION_AND_NAVIGATION_POD_APPEARANCE_SUB_CATEGORY));
		assertEquals(APPEARANCE_SUB_CATEGORY_MAPPING.get(LOCATION_AND_NAVIGATION_POD_APPEARANCE_SUB_CATEGORY), "Location and Navigation Pod");
	}
	
}