package org.im97mori.ble.constants;

import static org.im97mori.ble.constants.ServiceUUID.ALERT_NOTIFICATION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.AUDIO_INPUT_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.AUDIO_STREAM_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.AUTOMATION_IO_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BASIC_AUDIO_ANNOUNCEMENT_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BATTERY_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BINARY_SENSOR_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BLOOD_PRESSURE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BODY_COMPOSITION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BOND_MANAGEMENT_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BROADCAST_AUDIO_ANNOUNCEMENT_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.BROADCAST_AUDIO_SCAN_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.CONSTANT_TONE_EXTENSION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.CONTINUOUS_GLUCOSE_MONITORING_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.COORDINATED_SET_IDENTIFICATION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.CURRENT_TIME_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.CYCLING_POWER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.CYCLING_SPEED_AND_CADENCE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.DEVICE_INFORMATION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.DEVICE_TIME_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.EMERGENCY_CONFIGURATION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.ENVIRONMENTAL_SENSING_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.FITNESS_MACHINE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.GENERIC_ACCESS_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.GENERIC_ATTRIBUTE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.GENERIC_MEDIA_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.GENERIC_TELEPHONE_BEARER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.GLUCOSE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.HEALTH_THERMOMETER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.HEART_RATE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.HTTP_PROXY_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.HUMAN_INTERFACE_DEVICE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.IMMEDIATE_ALERT_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.INDOOR_POSITIONING_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.INSULIN_DELIVERY_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.INTERNET_PROTOCOL_SUPPORT_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.LINK_LOSS_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.LOCATION_AND_NAVIGATION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.MEDIA_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.MESH_PROVISIONING_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.MESH_PROXY_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.MICROPHONE_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.NEXT_DST_CHANGE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.OBJECT_TRANSFER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.PHONE_ALERT_STATUS_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.PHYSICAL_ACTIVITY_MONITOR_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.PUBLISHED_AUDIO_CAPABILITIES_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.PULSE_OXIMETER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.RECONNECTION_CONFIGURATION_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.REFERENCE_TIME_UPDATE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.RUNNING_SPEED_AND_CADENCE_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.SCAN_PARAMETERS_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.SERVICE_MAPPING_128;
import static org.im97mori.ble.constants.ServiceUUID.TELEPHONE_BEARER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.TRANSPORT_DISCOVERY_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.TX_POWER_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.USER_DATA_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.VOLUME_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.VOLUME_OFFSET_CONTROL_SERVICE;
import static org.im97mori.ble.constants.ServiceUUID.WEIGHT_SCALE_SERVICE;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class ServiceUUIDTest {

	@Test
	public void test_map_00001() {
		assertTrue(SERVICE_MAPPING_128.containsKey(GENERIC_ACCESS_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(GENERIC_ACCESS_SERVICE), "Generic Access");
		assertTrue(SERVICE_MAPPING_128.containsKey(GENERIC_ATTRIBUTE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(GENERIC_ATTRIBUTE_SERVICE), "Generic Attribute");
		assertTrue(SERVICE_MAPPING_128.containsKey(IMMEDIATE_ALERT_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(IMMEDIATE_ALERT_SERVICE), "Immediate Alert");
		assertTrue(SERVICE_MAPPING_128.containsKey(LINK_LOSS_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(LINK_LOSS_SERVICE), "Link Loss");
		assertTrue(SERVICE_MAPPING_128.containsKey(TX_POWER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(TX_POWER_SERVICE), "Tx Power");
		assertTrue(SERVICE_MAPPING_128.containsKey(CURRENT_TIME_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(CURRENT_TIME_SERVICE), "Current Time");
		assertTrue(SERVICE_MAPPING_128.containsKey(REFERENCE_TIME_UPDATE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(REFERENCE_TIME_UPDATE_SERVICE), "Reference Time Update");
		assertTrue(SERVICE_MAPPING_128.containsKey(NEXT_DST_CHANGE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(NEXT_DST_CHANGE_SERVICE), "Next Dst Change");
		assertTrue(SERVICE_MAPPING_128.containsKey(GLUCOSE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(GLUCOSE_SERVICE), "Glucose");
		assertTrue(SERVICE_MAPPING_128.containsKey(HEALTH_THERMOMETER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(HEALTH_THERMOMETER_SERVICE), "Health Thermometer");
		assertTrue(SERVICE_MAPPING_128.containsKey(DEVICE_INFORMATION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(DEVICE_INFORMATION_SERVICE), "Device Information");
		assertTrue(SERVICE_MAPPING_128.containsKey(HEART_RATE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(HEART_RATE_SERVICE), "Heart Rate");
		assertTrue(SERVICE_MAPPING_128.containsKey(PHONE_ALERT_STATUS_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(PHONE_ALERT_STATUS_SERVICE), "Phone Alert Status");
		assertTrue(SERVICE_MAPPING_128.containsKey(BATTERY_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BATTERY_SERVICE), "Battery");
		assertTrue(SERVICE_MAPPING_128.containsKey(BLOOD_PRESSURE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BLOOD_PRESSURE_SERVICE), "Blood Pressure");
		assertTrue(SERVICE_MAPPING_128.containsKey(ALERT_NOTIFICATION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(ALERT_NOTIFICATION_SERVICE), "Alert Notification");
		assertTrue(SERVICE_MAPPING_128.containsKey(HUMAN_INTERFACE_DEVICE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(HUMAN_INTERFACE_DEVICE_SERVICE), "Human Interface Device");
		assertTrue(SERVICE_MAPPING_128.containsKey(SCAN_PARAMETERS_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(SCAN_PARAMETERS_SERVICE), "Scan Parameters");
		assertTrue(SERVICE_MAPPING_128.containsKey(RUNNING_SPEED_AND_CADENCE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(RUNNING_SPEED_AND_CADENCE_SERVICE), "Running Speed and Cadence");
		assertTrue(SERVICE_MAPPING_128.containsKey(AUTOMATION_IO_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(AUTOMATION_IO_SERVICE), "Automation Io");
		assertTrue(SERVICE_MAPPING_128.containsKey(CYCLING_SPEED_AND_CADENCE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(CYCLING_SPEED_AND_CADENCE_SERVICE), "Cycling Speed and Cadence");
		assertTrue(SERVICE_MAPPING_128.containsKey(CYCLING_POWER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(CYCLING_POWER_SERVICE), "Cycling Power");
		assertTrue(SERVICE_MAPPING_128.containsKey(LOCATION_AND_NAVIGATION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(LOCATION_AND_NAVIGATION_SERVICE), "Location and Navigation");
		assertTrue(SERVICE_MAPPING_128.containsKey(ENVIRONMENTAL_SENSING_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(ENVIRONMENTAL_SENSING_SERVICE), "Environmental Sensing");
		assertTrue(SERVICE_MAPPING_128.containsKey(BODY_COMPOSITION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BODY_COMPOSITION_SERVICE), "Body Composition");
		assertTrue(SERVICE_MAPPING_128.containsKey(USER_DATA_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(USER_DATA_SERVICE), "User Data");
		assertTrue(SERVICE_MAPPING_128.containsKey(WEIGHT_SCALE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(WEIGHT_SCALE_SERVICE), "Weight Scale");
		assertTrue(SERVICE_MAPPING_128.containsKey(BOND_MANAGEMENT_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BOND_MANAGEMENT_SERVICE), "Bond Management");
		assertTrue(SERVICE_MAPPING_128.containsKey(CONTINUOUS_GLUCOSE_MONITORING_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(CONTINUOUS_GLUCOSE_MONITORING_SERVICE), "Continuous Glucose Monitoring");
		assertTrue(SERVICE_MAPPING_128.containsKey(INTERNET_PROTOCOL_SUPPORT_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(INTERNET_PROTOCOL_SUPPORT_SERVICE), "Internet Protocol Support");
		assertTrue(SERVICE_MAPPING_128.containsKey(INDOOR_POSITIONING_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(INDOOR_POSITIONING_SERVICE), "Indoor Positioning");
		assertTrue(SERVICE_MAPPING_128.containsKey(PULSE_OXIMETER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(PULSE_OXIMETER_SERVICE), "Pulse Oximeter");
		assertTrue(SERVICE_MAPPING_128.containsKey(HTTP_PROXY_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(HTTP_PROXY_SERVICE), "Http Proxy");
		assertTrue(SERVICE_MAPPING_128.containsKey(TRANSPORT_DISCOVERY_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(TRANSPORT_DISCOVERY_SERVICE), "Transport Discovery");
		assertTrue(SERVICE_MAPPING_128.containsKey(OBJECT_TRANSFER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(OBJECT_TRANSFER_SERVICE), "Object Transfer");
		assertTrue(SERVICE_MAPPING_128.containsKey(FITNESS_MACHINE_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(FITNESS_MACHINE_SERVICE), "Fitness Machine");
		assertTrue(SERVICE_MAPPING_128.containsKey(MESH_PROVISIONING_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(MESH_PROVISIONING_SERVICE), "Mesh Provisioning");
		assertTrue(SERVICE_MAPPING_128.containsKey(MESH_PROXY_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(MESH_PROXY_SERVICE), "Mesh Proxy");
		assertTrue(SERVICE_MAPPING_128.containsKey(RECONNECTION_CONFIGURATION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(RECONNECTION_CONFIGURATION_SERVICE), "Reconnection Configuration");
		assertTrue(SERVICE_MAPPING_128.containsKey(INSULIN_DELIVERY_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(INSULIN_DELIVERY_SERVICE), "Insulin Delivery");
		assertTrue(SERVICE_MAPPING_128.containsKey(BINARY_SENSOR_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BINARY_SENSOR_SERVICE), "Binary Sensor");
		assertTrue(SERVICE_MAPPING_128.containsKey(EMERGENCY_CONFIGURATION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(EMERGENCY_CONFIGURATION_SERVICE), "Emergency Configuration");
		assertTrue(SERVICE_MAPPING_128.containsKey(PHYSICAL_ACTIVITY_MONITOR_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(PHYSICAL_ACTIVITY_MONITOR_SERVICE), "Physical Activity Monitor");
		assertTrue(SERVICE_MAPPING_128.containsKey(AUDIO_INPUT_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(AUDIO_INPUT_CONTROL_SERVICE), "Audio Input Control");
		assertTrue(SERVICE_MAPPING_128.containsKey(VOLUME_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(VOLUME_CONTROL_SERVICE), "Volume Control");
		assertTrue(SERVICE_MAPPING_128.containsKey(VOLUME_OFFSET_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(VOLUME_OFFSET_CONTROL_SERVICE), "Volume Offset Control");
		assertTrue(SERVICE_MAPPING_128.containsKey(COORDINATED_SET_IDENTIFICATION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(COORDINATED_SET_IDENTIFICATION_SERVICE), "Coordinated Set Identification");
		assertTrue(SERVICE_MAPPING_128.containsKey(DEVICE_TIME_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(DEVICE_TIME_SERVICE), "Device Time");
		assertTrue(SERVICE_MAPPING_128.containsKey(MEDIA_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(MEDIA_CONTROL_SERVICE), "Media Control");
		assertTrue(SERVICE_MAPPING_128.containsKey(GENERIC_MEDIA_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(GENERIC_MEDIA_CONTROL_SERVICE), "Generic Media Control");
		assertTrue(SERVICE_MAPPING_128.containsKey(CONSTANT_TONE_EXTENSION_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(CONSTANT_TONE_EXTENSION_SERVICE), "Constant Tone Extension");
		assertTrue(SERVICE_MAPPING_128.containsKey(TELEPHONE_BEARER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(TELEPHONE_BEARER_SERVICE), "Telephone Bearer");
		assertTrue(SERVICE_MAPPING_128.containsKey(GENERIC_TELEPHONE_BEARER_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(GENERIC_TELEPHONE_BEARER_SERVICE), "Generic Telephone Bearer");
		assertTrue(SERVICE_MAPPING_128.containsKey(MICROPHONE_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(MICROPHONE_CONTROL_SERVICE), "Microphone Control");
		assertTrue(SERVICE_MAPPING_128.containsKey(AUDIO_STREAM_CONTROL_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(AUDIO_STREAM_CONTROL_SERVICE), "Audio Stream Control Service");
		assertTrue(SERVICE_MAPPING_128.containsKey(BROADCAST_AUDIO_SCAN_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BROADCAST_AUDIO_SCAN_SERVICE), "Broadcast Audio Scan Service");
		assertTrue(SERVICE_MAPPING_128.containsKey(PUBLISHED_AUDIO_CAPABILITIES_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(PUBLISHED_AUDIO_CAPABILITIES_SERVICE), "Published Audio Capabilities Service");
		assertTrue(SERVICE_MAPPING_128.containsKey(BASIC_AUDIO_ANNOUNCEMENT_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BASIC_AUDIO_ANNOUNCEMENT_SERVICE), "Basic Audio Announcement Service");
		assertTrue(SERVICE_MAPPING_128.containsKey(BROADCAST_AUDIO_ANNOUNCEMENT_SERVICE));
		assertEquals(SERVICE_MAPPING_128.get(BROADCAST_AUDIO_ANNOUNCEMENT_SERVICE), "Broadcast Audio Announcement Service");
	}
	
}